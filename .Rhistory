days(1)
days=unique(as.Date(data$date));
typeof(days)
head(days)
head(data$date)
head(as.Date(data$date))
data$date=as.Date(data$date)
head(data$date)
data<-read.csv("./data/activity.csv");
data$date=as.Date(data$date);
days=unique(as.Date(data$date));
sum(data[,data$date==days[0]])
aux<-data[,data$date==days[0]]
sum(aux$steps)
sum(aux$steps,na.rm=TRUE)
days[0]
days[1]
View(data)
length(days)
aux<-data[,data$date==days[1]]
aux<-data[,data$date==days[0]]
aux<-data[,data$date==days[1]]
data$date==days[1]
sum(data$date==days[1])
aux<-data[data$date==days[1],"steps"]
sum(aux,na.rm=TRUE)
sum(aux)
sum(data[data$date==days[1],"steps"],na.rm=TRUE)
sum(data[data$date==days[2],"steps"],na.rm=TRUE)
sum(data[data$date==days[3],"steps"],na.rm=TRUE)
sum(data[data$date==days[4],"steps"],na.rm=TRUE)
hist()
hist
?hist
x=sum(data[data$date=days],"steps",na.rm=TRUE)
x<-sum(data[data$date=days],"steps",na.rm=TRUE)
x<-sum(data[data$date=days,"steps"],na.rm=TRUE)
x<-sum(data[data$date==days,"steps"],na.rm=TRUE)
length(x)
x
x[1:n]
x[1:10]=0
for i in 1 to length(days){
}
for i in 1:length(days){
}
for (i in 1:50 ) {
i}
for (i in 1:length(days)){
}
x[1:days]=0;
for (i in 1:length(days)){
x[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)
}
hist(x)
library(ggplot2)
qplot(x,  geom="histogram")
hist(x)
max(x)
x[days,1:days]=0
T$date=days;
length()
length(T)
head(T)
T<-data.frame(days,0)
head(T)
T$X0
T$X0[2]
T$X0[0]
T$X0[1]
T<-data.frame(days,0);
for (i in 1:length(days)){
T$X0[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)
}
qplot(X0,data=T,geom=histogram)
qplot(X0,data=T,geom="histogram")
Steps[1:length(days)]=0;
T<-data.frame(days,Steps);
for (i in 1:length(days)){
T$X0[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)
}
qplot(X0,data=T,geom="histogram")
View(`T`)
rm(T)
Steps[1:length(days)]=0;
T<-data.frame(days,Steps);
for (i in 1:length(days)){
T$X0[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)
}
qplot(Steps,data=T,geom="histogram")
Steps[1:length(days)]=0;
T<-data.frame(days,Steps);
for (i in 1:length(days)){
T$Steps[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)
}
qplot(Steps,data=T,geom="histogram")
Steps[1:length(days)]=0;
tt[1:2]=0
tt=1
tt[1:2]=0;
tt=c(rep(0,freq=length(days)))
length(tt)
tt=c(rep(0,length(days)))
Steps=c(rep(0,length(days)))
Steps=c(rep(0,length(days)))
T<-data.frame(days,Steps);
for (i in 1:length(days)){
T$Steps[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)/sum(data$date==days[1])
}
qplot(Steps,data=T,geom="histogram")
View(`T`)
?plot
mean(T$steps)
mean(T$Steps)
summary(T$Steps)
xtable
library(xtable)
xtable(T$Steps)
summary(T$Steps)
summary(T$Steps)''
summary(T$Steps)'
''
summary(T$Steps)$Median
t<-summary(T$Steps)
t
t$Median
xt<-xtable(summary(T$Steps))
xt<-xtable(t(summary(T$Steps)))
SupressWarnings(qplot(Steps,data=T,geom="histogram"))
suppressWarnings(qplot(Steps,data=T,geom="histogram"))
suppressWarnings(suppressMessage(qplot(Steps,data=T,geom="histogram")))
suppressWarnings(suppressMessages(qplot(Steps,data=T,geom="histogram")))
suppressMessages(qplot(Steps,data=T,geom="histogram"))
capture.output(qplot(Steps,data=T,geom="histogram"))
p <- ggplot(data = T, aes(T = Steps)) +
geom_histogram(binwidth = diff(range(T$Steps))/30)
print(p)
p <- ggplot(data = T, aes(x = Steps)) +
geom_histogram(binwidth = diff(range(T$Steps))/30)
print(p)
p <- ggplot(data = T, aes(x = Steps)) +
geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
p <- ggplot(data = T, aes(x = Steps)) +
geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
p <- ggplot(data = T, aes(x = days,y = Steps)) +
geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
p <- ggplot(data = T$Steps, aes(x = T$days)) +
geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
p <- ggplot(T, aes(T$days,T$Steps)) + geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
p <- ggplot(T, aes(days,Steps)) + geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
p <- ggplot(T, aes(days,Steps))
p<-p+geom_histogram()
print(p)
summary(p)
p <- ggplot(T, aes(Steps)) + geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
histogramData<-data.frame(days,Steps);
p <- ggplot(histogramData, aes(Steps)) + geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
Steps<-T$Steps;
histogramData<-data.frame(days,Steps);
p <- ggplot(histogramData, aes(Steps)) + geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
?hist
qplot(Steps,data=T,geom="histogram")
T
Steps=c(rep(0,length(days)))
Average=c(rep(0,length(days)))
T<-data.frame(days,Steps,Average);
for (i in 1:length(days)){
T$Steps[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)
T$Average[i]<-sum(data[data$date==days[i],"steps"],na.rm=TRUE)/sum(data$date==days[1],na.rm=TRUE)
}
p <- ggplot(T, aes(Steps)) + geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
rm(list.all)
?list
rm()
?rm()
rm(list=ls())
data<-read.csv("./data/activity.csv");
data$date=as.Date(data$date);
Days=unique(as.Date(data$date));
Steps=c(rep(0,length(Days)))
Average=c(rep(0,length(Days)))
TD<-data.frame(Days,Steps,Average);
for (i in 1:length(Days)){
TD$Steps[i]<-sum(data[data$date==Days[i],"steps"],na.rm=TRUE)
TD$Average[i]<-sum(data[data$date==Days[i],"steps"],na.rm=TRUE)/sum(data$date==Days[1],na.rm=TRUE)
}
Steps<-TD$Steps;
histData<-data.frame(Steps,Days)
p <- ggplot(histData, aes(Days)) + geom_histogram()
#binwidth = diff(range(T$Steps))/30
print(p)
Steps<-TD$Steps;
histData<-data.frame(Steps,Days)
p <- ggplot(histData, aes(Days)) + geom_histogram(binwidth = diff(range(T$Steps))/30)
Steps<-TD$Steps;
histData<-data.frame(Steps,Days)
p <- ggplot(histData, aes(Days)) + geom_histogram(binwidth = diff(range(TD$Steps))/30)
print(p)
Steps<-TD$Steps;
histData<-data.frame(Steps,Days)
p <- ggplot(histData, aes(Days)) + geom_histogram(binwidth = diff(range(TD$Days))/30)
print(p)
p <- ggplot(histData, aes(Days,Steps)) + geom_histogram()#binwidth =
print(p)
p <- ggplot(histData, aes(Days,Steps)) + geom_histogram(stat="identity")#binwidth = diff(range(TD$Days))/30)
print(p)
median
Mean=c(rep(0,length(Days)))
Median=c(rep(0,length(Days)))
TD2<-data.frame(Days,Mean,Median)
for (i in 1:length(Days)){
TD2$Mean[i]<-mean(data[data$date==Days[i],"steps"],na.rm=TRUE)
TD$Median[i]<-median(data[data$date==Days[i],"steps"],na.rm=TRUE)
}
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
xtable(TD2)
print.xtable(xtable(t(TD2)))
print.xtable(xtable(as.character(TD2)),type="html")
print.xtable(xtable(sapply(TD2,as.character)),type="html")
View(TD2)
?mean
data[data$date==Days[3],"steps"]
data[data$date==Days[1],"steps"]
mean(data[data$date==Days[1],"steps"],na.rm=TRUE)
median(c(1,2,3))
median(data[data$date==Days[3],"steps"]
)
median(data[data$date==Days[3],"steps"])
data[data$date==Days[3],"steps"]
median(data[data$date==Days[3],"steps"]+500)
median(T$Steps)
median(TD$Steps)
?xtable
head(data)
y<-unique(data$interval)
length(y)
AllAverage=sapply(mean(data$date))
AllAverage=sapply(data$date,mean)
tail(AllAverage)
AllAverage=lapply(data$date,mean)
?sapply
AllAverage=lapply(data$steps,mean)
AllAverage=sapply(data$steps,mean)
sum(AllAverage)
AllAverage=sapply(sapply(data$steps,as.numeric),mean)
sum(AllAverage)
typeof(data$steps)
mean(t(data$steps))
AllAverage=sapply(sapply(data$steps,as.numeric),mean,na.rm=TRUE)
mean(t(data$steps),na.rm=TRUE)
mean((data$steps),na.rm=TRUE)
table_interval_steps <- aggregate(steps ~ interval, data, mean)
ggplot(table_interval_steps,aes(interval,steps))+geom_line()
intervalSteps <- aggregate(steps ~ interval, data, mean)
g<-ggplot(intervalSteps,aes(interval,steps))+geom_line()
print(g)
maxim<-max(intervalSteps)
maxim
maxim<-max(intervalSteps$steps)
maxim
steps.interval$interval[which.max(steps.interval$steps)]
max_interval <- which.max(intervalSteps)
max_interval <- which.max(intervalSteps$Steps)
max_interval
time_series <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
View(table_interval_steps)
min(table_interval_steps$steps)
max(table_interval_steps$steps)
table_interval_steps[,Steps==max(table_interval_steps$steps)]
table_interval_steps[,steps==max(table_interval_steps$steps)]
table_interval_steps[,table_interval_steps$steps==max(table_interval_steps$steps)]
table_interval_steps$steps==max(table_interval_steps$steps)
table_interval[table_interval_steps$steps==max(table_interval_steps$steps),"interval"]
table_interval_steps[table_interval_steps$steps==max(table_interval_steps$steps),"interval"]
intervalSteps <- aggregatesteps ~ interval, data, mean)
intervalSteps <- aggregate(steps ~ interval, data, mean)
install.packages("xtable")
install.packages("ggplot")
install.packages("ggplot2")
?install.packages
is.na(c(1,NA,3))
sum(is.na(c(1,NA,3)))>1
sum(is.na(c(1,NA,3)))>=1
c<-90;
tNAs<-is.NA(data$steps) || is.NA(data$interval)
tNAs<-is.na(data$steps) || is.na(data$interval)
sum(tNAs)
?merge
tNAs<-merge(is.na(data$steps) is.na(data$interval))
is.na(data$steps)
tNAs<-data.frame(is.na(data$steps), is.na(data$interval))
View(table_interval_steps)
View(data)
View(tNAs)
tNAs<-c(is.na(data$steps), is.na(data$interval))
?data.frame
tNAs<-data.frame(stepsNA, intervalNA,row.names="2 3")
stepsNA<-is.na(data$steps);
intervalNA<-is.na(data$interval);
tNAs<-data.frame(stepsNA, intervalNA,row.names="2 3")
tNAs<-data.frame(stepsNA, intervalNA,row.names="2 3")
tNAs<-data.frame(stepsNA, intervalNA,row.names=c("3","4"))
tNAs<-data.frame(stepsNA, intervalNA,row.names="3,4")
??or
?or
ssss<-is.na(data$steps)+is.na(data$interval);
sum(ssss)
sum(is.na(data$interval))
tNAs<-is.na(data$steps);
newData<-data;
newData[tNAs,"steps"]<-intervalSteps[intervalSteps$interval==newData[tNAs,"interval"],"steps"]
sum(is.na(newData))
TD2[TD2$Mean==NaN,"Mean"]=0;
is.nan
is.nan(TD2)
sum(is.nan(TD2$Mean))
sum(is.na(intervalSteps))
sum(is.nan(intervalSteps))
f<-intervalSteps$interval==newData[tNAs,"interval"]
newData[tNAs,"steps"]<-intervalSteps[newData[tNAs,"interval"],"steps"]
naIntervals<-unique(newData[tNAs,"interval"]);
?comp
??comparison
naIntervals<-unique(newData[tNAs,"interval"]);
naSteps<-intervalSteps[intervalSteps==naIntervals,"Steps"];
naSteps<-intervalSteps[intervalSteps$interval==naIntervals,"Steps"];
?merge
x=c(1,2,3,4)
y=c(5,6,7,8)
merge(x,y)
length(tNAs)
tNAs<-is.na(data$steps);
newData<-data;
for (i in 1:length(tNAs)){
if (tNAs) newData[i,"steps"]<-intervalStep[intervalStep$interva==newData[i,"interval"],"steps"]
}
tNAs<-is.na(data$steps);
newData<-data;
for (i in 1:length(tNAs)){
if (tNAs) newData[i,"steps"]<-intervalSteps[intervalSteps$interva==newData[i,"interval"],"steps"]
}
is.na(newData)
tNAs<-is.na(data$steps);
newData<-data;
for (i in 1:length(tNAs)){
if (tNAs) newData[i,"steps"]<-intervalSteps[intervalSteps$interva==newData[i,"interval"],"steps"]
}
sum(is.na(newData))
warnings()
intervalSteps[intervalSteps$interval==newData[3,"interval"],"Steps"]
intervalSteps[intervalSteps$interval==newData[4,"interval"],"Steps"]
head(newData)
tail(newData)
intervalSteps[intervalSteps$interva==newData[5,"interval"],"steps"]
tNAs<-is.na(data$steps);
newData<-data;
for (i in 1:length(tNAs)){
if (tNAs) newData[i,"steps"]<-intervalSteps[intervalSteps$interva==newData[i,"interval"],"steps"]
}
warnings()
tNAs<-is.na(data$steps);
newData<-data;
intervalSteps[intervalSteps$interva==newData[4,"interval"],"steps"]
tNAs<-is.na(data$steps);
newData<-data;
for (i in 1:length(tNAs)){
if (tNAs[i]) newData[i,"steps"]<-intervalSteps[intervalSteps$interva==newData[i,"interval"],"steps"]
}
Mean2=c(rep(0,length(Days)))
TD3<-data.frame(Days,Mean2)
for (i in 1:length(Days)){
TD3$Mean2[i]<-round(mean(newData[newData$date==Days[i],"steps"],na.rm=TRUE),digits=4)
#remove the Nan
if(is.nan(TD3$Mean2[i])) TD3$Mean2[i]=0;
}
print.xtable(xtable(sapply(TD3,as.character),align="ccc"),type="html")
Median2=median(newData$Steps,na.rm=TRUE);
Median=median(data$steps,na.rm=TRUE);
Mean=mean(data$steps,na.rm=TRUE);
Median=median(TD$steps,na.rm=TRUE);
data<-read.csv("./data/activity.csv");
data$date=as.Date(data$date);
Days=unique(as.Date(data$date));
rm(list=ls())
data<-read.csv("./data/activity.csv");
data$date=as.Date(data$date);
Days=unique(as.Date(data$date));
Steps=c(rep(0,length(Days)))
Average=c(rep(0,length(Days)))
TD<-data.frame(Days,Steps,Average);
for (i in 1:length(Days)){
TD$Steps[i]<-sum(data[data$date==Days[i],"steps"],na.rm=TRUE)
TD$Average[i]<-sum(data[data$date==Days[i],"steps"],na.rm=TRUE)/sum(data$date==Days[1],na.rm=TRUE)
}
Steps<-TD$Steps;
histData<-data.frame(Steps,Days)
p <- ggplot(histData, aes(Days,Steps)) + geom_histogram(stat="identity")
print(p)
Mean=c(rep(0,length(Days)))
TD2<-data.frame(Days,Mean)
for (i in 1:length(Days)){
TD2$Mean[i]<-round(mean(data[data$date==Days[i],"steps"],na.rm=TRUE),digits=4)
#remove the Nan
if(is.nan(TD2$Mean[i])) TD2$Mean[i]=0;
}
print.xtable(xtable(sapply(TD2,as.character),align="ccc"),type="html")
Median=median(TD$steps,na.rm=TRUE);
Mean=mean(data$steps,na.rm=TRUE);
Median=median(data$steps,na.rm=TRUE);
View(TD)
View(TD)
p <- ggplot(histData, aes(Steps,Days)) + geom_histogram(stat="identity")
print(p)
p <- ggplot(histData, aes(Days,Steps)) + geom_histogram(stat="identity")
print(p)
head(histData)
tail(histDAta)
tail(histData)
Median=median(histData$Steps,na.rm=TRUE);
Mean=mean(histData$Steps,na.rm=TRUE);
?weekday
?weekdays
weekdays(as.Date(Days))
weekdays(as.Date(data$date))
as.POSIXlt(data$date)$wday
weekdays(as.Date(Days))
weekdays(as.Date(data$date))
newData[,"day"]<-as.POSIXlt(newData$date)$wday;
tNAs<-is.na(data$steps);
newData<-data;
for (i in 1:length(tNAs)){
if (tNAs[i]) newData[i,"steps"]<-intervalSteps[intervalSteps$interva==newData[i,"interval"],"steps"]
}
intervalSteps <- aggregate(steps ~ interval, data, mean)
g<-ggplot(intervalSteps,aes(interval,steps))+geom_line()
print(g)
maxim<-intervalSteps[intervalSteps$steps==max(intervalSteps$steps),"interval"]
tNAs<-is.na(data$steps);
newData<-data;
for (i in 1:length(tNAs)){
if (tNAs[i]) newData[i,"steps"]<-intervalSteps[intervalSteps$interva==newData[i,"interval"],"steps"]
}
newData[,"day"]<-as.POSIXlt(newData$date)$wday;
View(newData)
newData[newData$day==0,"day"]="weekend";
newData[newData$day==0,"day"]="weekend";
newData[newData$day==6,"day"]="weekend";
newData[newData$day==5,"day"]="weekday";
newData[newData$day==4,"day"]="weekday";
newData[newData$day==3,"day"]="weekday";
newData[newData$day==2,"day"]="weekday";
newData[newData$day==1,"day"]="weekday";
View(newData)
str(newData)
>factor()
?factor()
t=factor(c("weekday","weekend"),labels="day")
t=factor(c("weekday","weekend"),labels=c("weekday","weekend"))
t=factor(newData$day,labels=c("weekday","weekend"))
tail(t)
t
data$date
t=factor(c("weekday","weekend"),labels=c("weekday","weekend"))
t
length(t)
t=factor(newData$day,labels=c("weekday","weekend"))
length(t)
newData$day<-factor(newData$day,labels=c("weekday","weekend"))
View(newData)
str(newData)
xyplot(steps~interval|day,data=newData,layout=c(1,2))
library(lattice)
xyplot(steps~interval|day,data=newData,layout=c(1,2))
xyplot(steps~interval|day,data=newData,layout=c(1,2),type="l")
?aggregate
intervalSteps2 <- aggregate(steps ~ interval, newData, mean)
View(intervalSteps2)
intervalSteps2 <- aggregate(steps ~ interval+day, newData, mean)
View(intervalSteps2)
sunday=0
newData[,"day"]<-as.POSIXlt(newData$date)$wday;
newData[newData$day==0,"day"]="weekend";
newData[newData$day==6,"day"]="weekend";
newData[newData$day==5,"day"]="weekday";
newData[newData$day==4,"day"]="weekday";
newData[newData$day==3,"day"]="weekday";
newData[newData$day==2,"day"]="weekday";
newData[newData$day==1,"day"]="weekday";
newData$day<-factor(newData$day,labels=c("weekday","weekend"))
intervalSteps2 <- aggregate(steps ~ interval+day, newData, mean)
xyplot(steps~interval|day,data=intervalSteps2,layout=c(1,2),type="l")
